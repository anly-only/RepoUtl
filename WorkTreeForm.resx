<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACgHwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAH2dJ
        REFUeNrt3XuYHVWZ7/Hv6t3pWy690zvhThCQBgIiApqdACrGVJBU44jjjdFHjkc9hxlnlDnPjB595uh4
        dNQ5HHU8o454GXWYEXUEtKsJ2Q2IYJIKNxFEoLnlIrekd2d3J52+7r3OH29tuwnkRrr32lX1fp6nnk6g
        0bd31/rVqlVrrQKllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUnTKuC1Aza0H2rcyh
        bCw2YzAZYA7QGB0ZIGPBGPndV3//1oI1YIFydEwCkxYmDLYMlCdoskOlG1z/iGoGaQDESEfWbzDQAswF
        2oEcsBDoiP68GMgCC6JjHvL9zUBT9LURaJh2AFSmHZPAGDAefR0FdgND0TEIDAD90TEAFKN/N2yMGV2Q
        aSg/2f9z1x+XOggaAHVmccclVCqmCUw7cCRwHHA8cALwCuAYpLF3APOBVqYadS1Vw2IPMAyUkEB4FtgM
        bI2+bgO2A4OZBsa2DwTOPlv1YhoADi1u76JsbKuBRcAS4DTgTOAUpNEfhVzpm4jf78oivYhBJAC2An3A
        w8AjwGYLO7BmZGCw23WtqRW3kyrWcu2+wbAAuZKfDrwGOBs4GTgC6drX+kpeaxbpMWwHngAeBO4Dfgds
        wZjB4s5u67rItNAAmEUnHv9ehnaVWoETkca+DDgXucJ3IINySgYdB4AngXuBEAmFp9rGynu2jax1XV9i
        aQDMsI523xhDB3AWcEF0vAq5wmuDPzhlYAfwEHBndDxgrC32D/Zo72AGaQDMgEULu4y1dhFwHrASeCNw
        KjIKrw7fMPAocAfQC9xjrNnRP6i3CodLA+Aw5LL+fKRr/xbAQ+7rW13XlXAjSBj0Aj3Ab4qlYMh1UXGl
        AXCIOrJ+xsBJSIO/DLnqL3BdV0rtQsYMbgBuNpgn+kvdZddFxYkGwEHKZf1WZADv3cAa5LFd0kfs46KC
        zDdYC1wH3FUsBSOui4oDDYADiLr5K4H3I/f2Wdc1qf0aBG4HfgjcorcH+6cBsA+5rN+O3Nt/ADgfaHNd
        kzokI8AG4LvATcVSMOi6oHqkAbCXXNafi9zfXwlciMylV/E1hjxG/Bfg5mIpGHZdUD3RAIjksn4jsBz4
        GHAxesVPmj3AOuCrwIZiKZh0XVA90AAAcln/JOAjwPuQefkquYrAtWC+Vix1P+m6GNdSHQDRyP5lwN8i
        s/VS/XmkiEVmGf4j8LNiKdjjuiBXUjs1NZf1Twa+CHwSWXKrjT89DDI1+2LghLaWzodGRvsGXBfl6oNI
        lVzWzyDP8T8LvNp1PaouPAD8HZieYsomEqWqB5DL+vOAq5Cu34mu61F140hgNWDaWk757cjoY+OuC6qV
        1ARALusfBfwf4KPoIh31Yq3A68Ec29bSedfIaN9u1wXVQioCIJf1TwG+AbwT2T5LqZeSQTZoWdrW0nl3
        GsYFEh8Auax/JvAdZDpv6sY81CEzyIYt50Q9ge2uC5pNiQ6AXNY/A2n8K1zXomJnCRIC4cho3w7XxcyW
        xAZANLnn28g8fqVejuOAM9taOu8YGe3b6bqY2ZDIAMhl/cXAPyMju0odjhOAJW0tnbeNjPYlbsJQ4gIg
        l/Wbgc8AV6D3/GpmnAbMaWvpvH1ktC9R8wSSuKHFu4APo41fzRyDnFPvcl3ITEtUDyCX9ZciXf+jXdei
        EqcJeTx468hoX7/rYmZKYgIg1+43YfjfyFp+pWbDIqC5tblz3chYMm4FknMLYLgIeIfrMlTi/akxvNF1
        ETMlEQGQW9jVityjtbuuRSVeFvhwtJQ89hIRAFi7DJnpp1QtrERe8xZ7sQ+AbHaNQTb10Ku/qpUscFn7
        Qj/2T5piHwAZzDHo1V/V3spGG/+nTbEPAGRTj5NcF6FS50QSsKFMEgLgPHTrblV7rci5F2uxDoBctisD
        nOG6DpVaZ+QW+rGeSxPrAAA7FzjedRUqtY7HMtd1EYcj5gFAG7DQdREqtRYS8xfIxD0A5qD3/8qdVuQc
        jK24B4BS6jDEPQAmgFHXRajUGkHOwdiKewDsARK5VZOKhZ0YYr1LUMwDwA4D21xXoVJrm4FYv2481gFQ
        LPWUgd+5rkOl1kP9O4NY7wsQ6wCI3IPciylVSyPIuRdrSQiA3wJPuS5Cpc5TyLkXa7EPAFuxzwK3uq5D
        pc4tlbJ91nURhyv2ATAw1GOB64GS61pUapSA63fu6rGuCzlcsQ+AyCa0F6Bq51YDd7kuYiYkIgCKpWAE
        uAYYdF2LSrwScE2/nHOxl4gAAMByO/BT12WoxPuphdtdFzFTYr2WebqRsb5yW0vn48Cbkf3blZppjwBX
        DZSC510XMlMSEwAAI6N9/W0tnUPIy0GaXNejEmUY+ESxFCRqrCk5twBTfgx8C6i4LkQlRgX4loWfuC5k
        piWqBwAwMtpXbmvpvA/oBE53XY9KhBuBjw+Ugl2uC5lpiQsAgJHRvj1tLZ13A2cDr3Bdj4q1XwF/USwF
        T7suZDYkMgAARkb7dkYhcA5wnOt6VCxtBP57sRT0uS5ktiQ2AABGRvt2tLV0bgLOApa4rkfFyq+Rxv+Q
        60JmU6IDAGBktG97W0vnncjLQ04BYv86JzWrLHAT8OfFUvCI62JmW+IDAGBktG+graXzl8gurmem5edW
        h2wc+CHwsWIp2Oq6mFpITUMYGe3b3dbSeRuwGxkXiPV2zmrGDQCfAz5bLAUDroupldQEAMDIaN94W3Nn
        iOH3yCPCo1zXpOrCb4GPWfjBQCkYc11MLaX2fjiX9U8CPgW8G+0NpNUIcB3wD8VS8LjrYlxIVQ9guugx
        YS/wOPBK4AhSHIgpY5G9JD8BXF0sBdtdF+SKnvBALuufCPwl8F5gset61KzqB64F/l+xFDzpuhjXUtsD
        mG5ktK/U1tp5K7AeaEdmD8b6lU/qRfYAAfDXYL5XLAVF1wXVA+0B7CWX9ecCq4Argdej7x6MuzHgTuCb
        wLpiKYj1Pv4zTQNgH3Lt/gIMlwAfAM5HBwrjZgTp0X0PuKlYCnS3qJegAXAAuaw/H1gJvB94I5B1XZPa
        rxKygOcHwK3FUjDkuqB6pgFwkHJZvxU4F3lseAmytkDHUOpDBdiKTOG9DrinmJA9+2abBsAhymX9DHAi
        sBq4DDgPWOC6rpQaAu4FbgDWWnhqoBTvV3XVWqwDoMsLWy20B4X8cy7+/xdl/fkWXgNcjGxDthRodf25
        JNwIsjdfL3LFv6/oaKMO3wuPBIaCQj62vY1YB4DvhUuALwP/FBTyd7qqoyPbZQw2B7wWGS94A3AaMM/1
        Z5QQu4E+4A6k4d9dsfTvHAycvZjD98ILgI8C/yMo5GO7cCgJAfBrZGbX/wR+GhTyEy5r6siuMQbTAbwK
        uAC4MPrzEeiYwcEqAzuQ2Xq/Rhr+gw2W4g6HjR6ga1U4xxr+FPgCsqfmBXEOgEbXBcwAiwzIfRNY6nvh
        V4JC3tkkj4FSjwWKwO1nvvJztz/bv6kV7InI9mR5ZCDxFKADDYSqMrIa7wngPmQnnvuAzeWJhj2l4V+4
        rg8A3wtzFq5CZo0uQAYeYy0JPYA7mdrtpwzcDPyvsmn4zdp1r6urd7d1LLjEmIaG+chMw6XI+MHZwMlI
        D2EuydypeTqLbLH9PPAk8ADS2H8HbGnADu0o1dc79/xLNsBkwznAZ5HxnmpwbwUu1B5A/cgAa4AzMrby
        Jd8Lrw0K+d2ui6oaGLrJIiPXDwAPLG6/5LqKaWhFXmSyBBk3OAPpISxBliu3I+84iFtYW2SDjUFgO7AF
        eAx4GBnE2wzssNaODAz2uK51n3wvnMskf4YsHDrRdT0zLWkBUPUK4CvAm3wv/IK1lft7elfU1VUFYMfg
        TSCj2tuiY33HQh9jaUIa/pHAscDxyMl3AnA0kIuOechThznUvudQASaROfbDwE5koc3TyJVxS3T8Adhu
        oQR2fKBUv419Ot/bZMC+Gmn4byWhU8KTGgAgv7B3AK8zpuHrvhd+Pyjkd7gu6kAGdgYgV84dTA2EAdCR
        XdNgMM3IrUI7EgILkfGEHLKSMYvcny4A5kefQzPSi2hCfucZJDCqoVGJjjLSqMejYwwYBXYhPZch5Io+
        gDT2/ujPRfkeuxtrR4uDN8X6pSy+Fy4CewXwESR0EyvJAVB1AjJi2+V74VeBtXF9bjtQ6qkgPYYRpPE9
        sff3tGf/hEYmDZABmwEzB/k9/7HhW2gwcktRva2wFqz5YxCYSbBlYNLChJFgKE/SaAdLN7r+GGaN74Wt
        yASvq4AVpKB9JP4HjGSQx3HnAD2+F37dWjb29Lp9ZDgbogZqkSv5JHIVV/vhrw7nYFmGXPHXkKL5G2kJ
        gKq5wDuBlcZwg++F38FwX7AueUGgDsxfHTZieQ2WDyLTulP3Vum0BUBVDvgg8FYsN/he+AMs9wa9eb1a
        poC/elMT1p6D5Qrgbcgj2FRKawBULQY+DLwdwzrfC/8NWB8U8ol7CaSCNV44z8AKrH0f8jw/dVf8vaU9
        AKpywOXI454NvhdeBxSMtU939y6vu8eH6uD5K0NDhmOQXZ7egwzupeYe/0A0AF6ouh3YRUCfNabb98Ju
        4P6gkNetpGLE98I25J2QbwW6gFPR8/1F9AN5aY3IVN2lwH8DNvleGAC3Ak8Ehfy46wLVi/nexiYwJyEr
        Mn1gGTJPQu2DBsCBZZFnw6uAZ5FbhF5kDcJTQUEHDl3yvbAJmfl5IfJ7Wg4cQ/LXVMwIDYCD14BMy30H
        8HYkDO7xvfA2ZPPJx8DsCgrLdMxgFl26ahMVY+cj6yWWI1f785BGr6srD5EGwMtTDYNjgUuR6bCPgt3g
        e+F64EHg6bE5w6O9PStd1xprXUdej331MS1IA39VBbsCafhLkSnQcVskVVc0AA6fQZ4irIiOv0J6Bw83
        T8y91/fCe5AVcM+YBrO7+2btIeyPf/EGQ6VhLtLgT7cye/O1SIM/GlnPoGaIBsDMa0LWH5yAPGseR+bt
        P2kr9kHfCx9ElsM+BfRba/f09C6P9eKZl8v3QoO8b2FR9HmdRoWzkSXRJyPzNLTBzyINgNnXhFzNjkG2
        CLPIEtodwDZjzOO+Fz6CLOzZgmyUMWgMw5WmwXJP92rX9R8W3/8lTLRksKYVGVA9CmnsJwOdyItZlyCN
        fS7apa8pDYDaM8iJPpep0WuQhTu7kHX1z1vLNjPWvtX3wmeQNfbPIctuS8AeIysCJ8CUuwvLnPwga7xN
        GGMzwBwsrcjVPMvU0uRjGed4ZD+DY5HGn0OWKeu5Vwf0l1A/GpFn1guBk5CBrqoysi5/mCgkZIMNBsAO
        +F5YQv4+GP373UgvY5Spdf2T044y0hOp3no0IMGUYWrpcCNT+wi0II17HtJ424Es2CyWDmQwLhvVPh8J
        txZ0VL7uaQDEQ4apXsOBFq5M39xjgqkGX572z+20A6b2BqiGQEP0tRoIc3jxJiIqATQAkqfaSKtXcKX2
        SdNcqRTTAFAqxTQAlEoxDQClUkwDQKkU0wBQKsU0AJRKMQ0ApVJMA0CpFNMAUCrFNACUSjENAKVSTANA
        qRTTAFAqxeIeANM3tVCq1qp7K8RW3ANgHNkaSykXRpBzMLbiHgB7kD35lXJhJ3IOxlasA8BihpGddJVy
        YTPGxPqlsbEOgJ7CsgrwgOs6VGo9GKxbFusxqFgHQORuZLdcpWppN3CX6yIOVxIC4AHkTTtK1dIjyDsg
        Yy32ARAU8v3AWtd1qNRZG517sRb7AIhcj7yQU6laeBa4wXURMyEpAfAAcKPrIlRq3GgTMviciAAICvky
        8G1gm+taVOJtBa7pkXMu9hIRAACZir0f+BY6NVjNngpwTXnC/tZ1ITMlMQHw81uWW+Aa4Jeua1GJdRtw
        zdpfLo/1/P/pEvcudt8Lzwf+A3nnvFIzZSvwnqCQ3+C6kJmUmB5AVVDIrwc+g7wmW6mZsBv4TNIaPyQw
        AAAMXAv8X2K+UkvVhXHgaou91nUhsyGRAdBdyE8AVwPfBCZd16NiaxL4JpirewrLJ1wXMxsSGQAAQSE/
        DHwa+Bcgkb88NasmkHPn00FhWWLXmiQ2AACCQn4Q+CTwNWDMdT0qNsaQc+aT0TmUWIl7CvBSurywzcJf
        AZ8A2l3Xo+raEPBFC//UU8jHerOPg5GKAADo8jY2WszlwOeA413Xo+rSNuDvgH8PCvlUjB2lJgAAulZu
        NDZjVgBfAlak7edX+2SBjcDHG6xZ/4veZYmZ6HMgqWwAvhcej9wOvB+Y67oe5dQw8EPgi0Ehv9V1MbWW
        ygAA8L2NzWDeDnwKWOq6HuXEw8A/YPnPoDc/6roYF1IbAFW+F54C/DVwObDAdT2qJoaQ6eJfDgr5x1wX
        41LqAwBgjRc2GViNBMH5wBzXNalZMQFsQGaJFoJCPvWPhjUApvG9sAN4D3AlcDoJnyeRIhVkD79vAj8K
        Cvmi64LqhQbAXrrecC+2eWIJ8F7gCuCV6OcUVxZ4AvgBcG15jt28tme565rqip7Y+9DlhcbCyUiP4HKg
        E+0RxEUFeAz4EfAfxvJ4d28+NY/2DoUGwAF0rdpkrLFLgLcD7wJeDTS7rku9pHFkr77rgJ81NNgtv7g5
        OZt3zAYNgIN0+RW/Z+iZoUXAm5FewQVAh+u6FCDv6Ps10vB7x5tGdhSCi1zXFAuxDgDfC7PAaRburuUm
        jb4XtgJnAX8CrEFuD7RXUFvjQB/yTogbDNzfXcjX7E3R/qqNGYw5D3g0KORLrj+MlyvuAXAC8J/Av2L4
        brCuto91/NWbDNYehUwr9oE3IOsMGl1/Ngk1CfwBuAMIkKv+c0Ghtvf3vhc2Ax8A/gvwjqCQj+0LauMe
        AEuQk2AR8A0wXwwKy5y8rWXN6o2NxpolSBisir4uAZpcf04xN4Es0tkIFID11rKlp9fNYh3fCxcBHwf+
        AugHLojzFOIkBMCdSEMrAzcDnwoKeafbNvte2AgcC5yL9AqWI7cJC4j5Z14DFpmp9zjS6H8F3AP8wfUK
        Pd8LzwI+D7wFyCAbhV4Y5wBIUlc1g9yPn+J74d9j+FmtbwmqohN1C7BlzeqNNxhrFgKnIoGQB14DHAfM
        RwPBIptubkNG8EPkjc+PWsNAzzr3j+98b1Mz2MuQHaZOdV3PTIr1ybdXD2C63cD3gavr7f6sywsbrdyy
        nIQ8UjwXODP6GTpI/mDiODCABOTDwL3Ab5Er/g7XV/m9RefY3yCTwubt9a+1B1Cn5iH3aCt8L/w80FMv
        87675QR/Ljo2dK0KG6xhPnA0EgpnIKsTT0QGFBchS5Yzrms/RGVkqW0RGbh7ApmO+/voz88YY4e61y2v
        yzc5rfHCZgOXIKtFzyHmF8t9ifUPtZ8ewHS7gB8DX25srDx8400rXJd94J9rVdiAoRXIIWMJxwKvYCoU
        jkCCoR1oQwYaM9T291lG9s7bg9yzF4HnkaviVmBz9PUZoGhgT3chX5eNfbpLVoU0GE5FFoa9B7lN2xft
        AcTAfOCDwBsmJxu+7nvhtfW+GCTozVeQq+cwcpIBMj25Ymk0hrbo5+pAQiKLBMLi6O8LkHCYz1RANEdH
        IzKlOcPU1OYK0qAryKO2sWnHCBKig9FRQhp7f3QUkYk4u4HhiilP3LTufOf37S+H74U5ZNr3R5BB28RL
        QwBUnYK8K+Btvhd+DVgXbR0eG93yvHuCqcb4h5f6vq7VG421ptrI5yC/5+rREB2GqR6DjY4KUyFQPSaA
        ckODrSR1Wq3vhW3IcvCPIsvBU9MuUvODTvt53wCcBxR8L/w6mF8HhWV1MT4wU7rXLbfIFb2Mvh1pn9as
        DpuN5Xzgz4GLSeH2cGkLgKq5wNuAN4Ht8b3wGiCsl4FCNbuimXzLsHwImcGZdV2TK2kNgKp25J7vEuBm
        3wv/FVgft1sDdXCirv75yBTei4GFrmtyLe0BUJUF3o1MJLrT98IfArcOk+n/ZeG1rmtTh2HbWV/hyqOW
        54CVwPuA16N7P/6RBsALzUd6AyuBB+ZS/onvhd1Y80TQu6yuJqio/fNXhxksJ10JXcA7gbNJ/iSrQ6YB
        8NKagdcis/T+EmN7fS+8HgiZbBwIbjvPdX3qJVx66SYqo3Yhcn9/GbIoawm6k9M+aQDsXwNyAv1XZFLI
        72icDHwvXAc8pGMF9SG6tz+jMmpXI7dxZyHzH9QBaAAcvDbgdUjP4GPAvVEQ3A7mkSS/QroeRY3+VOAi
        5Bn+ucjEqFjPbq01DYBDZ5ATbRWyPVgR7P2+F/4K2ajiIVMxA923pOf9crXge6FBRu1PR+ZyXIQsplqE
        NvqXTQPg8BjkBHxzdOwC+myDvcv3wjuB3wDbTCUz3H2LPk04FBd3baBxrKENWftwNrIHY56pfRXUDNAA
        mFnzka7oucCHgO3Ao7ahfJfvhfcADwF/wJjdwTrtIUwXTV+eiyx8WsoY5yG3XKcDR6Ln6qzQD3X2NALH
        RMdFyJz6fuBxrP2974X3I0tjNwP9xtiRaApv4vmrNxpjTYuVhUsnAEut5WzgVci7GBajr2erCQ2A2pmD
        rPk/GrgQWXwzjPQSNltrHvW9sA95ocVWYAcwaLCj3YV4BkPXqrtMxVSajcy4PALZBekULKdZWZz1CuTq
        Pg+9j3dCA8Adg5z485CNQN4U/fMxZH19P/C0xWz1vXALEgrPMbUMdzewB8xYuWIra2+p7dZZb3lzaDIN
        NIBtAtOGrK/IIVfvY4HjLJXjjFzhj0MCYAE6GaeuaADUn2akES1G7n+rLLKybw8y2FgCBsAWMw0UfS8c
        kL8zFB27ou8dA0aRW5AJZIlvmanlvzC1PDiDnBNzoqMlqqe6/0B1n4GF/HEvArMw+vvC6HvmRv+NXtFj
        QAMgPgxTm3osZP+7IFU3+HjBmn5euPFHdQ+A6v+24YUbhey9l8D0DURUQmgAJFN10w8dSFP7pYmuVIpp
        ACiVYhoASqWYBoBSKaYBoFSKaQAolWIaAEqlmAaAUimmAaBUimkAKJViGgBKpZgGgFIppgGgVIppACiV
        YnEPgOmbWihVa9V9FWIr7gEwgex2o5QL1Z2WYivuATACDLouQqXWIHIOxlasA8AY9gDPuq5DpdYzWPa4
        LuJwxDoAutflJ4BHXdehUuvRoDevtwCO/QbZ+FKpWppEzr1YS0oA6G2AqrVngPtdF3G4khAAm4FNrotQ
        qXMXhs2uizhcsQ+AoJAfB35OzB/HqFiZAH4erMuPuy7kcMU+ACK3Ag+6LkKlxoPALa6LmAmJCICgkH8W
        uBadFahmXwX4t6CQf851ITMhEQEQuQ6413URKvHuAX7suoiZkpgAiHoBX4V4T8xQdW0P8NXoXEuExARA
        5AbgJ66LUIn1E+BG10XMpMS9wtn3wk6ki3a261pUotwPvDMo5B9zXchMSloPgKCQ7wM+CTzvuhaVGM8D
        n0xa44cEBgBApczNwGeA3a5rUbG3G/h7ays3uy5kNiQyAG66NW+B7wFfQvcLUC/fKHIOfbend0WsN/7Y
        l0QGAPxxhuDVaAiol2cU+EcwV0fnUiIlbhBwb2u8sMXA3wB/C8xzXY+KhWHkwnF1UMjHesOPA0l8AAD4
        XtgEfBD4LJBzXY+qa0Xg01jz7aB3WWKv/FWpCAAAf/XGDNZcCnwBONV1Paou9QGfwPCLYF2+7LqYWkhN
        AFT5XvgapHu3kgSPgahDUkEWlH0iKOTvc11MLaUuAAB8L1wMXAVcCWRd16OcKgHfAr4cFPLbXRdTa6kM
        AAB/VdiI4S3IpKHXob2BtKkgC3s+jzVrg95lqdxPIrUBUOV74THAR4APAEe6rkfVxHZknsg/B4X8066L
        cSn1AQDge2EG6QVcBawB2lzXpGbFHmAt8BUgDArpGOjbHw2AaXwvbAPegowNXAA0u65JzYhxYD3wDWBt
        UMgPuy6oXmgAvATfC7NAF/AhpGegQRBPY8DdwHeAXwSF/E7XBdUbDYD98L1wIeABVyA9Ap1JGA/DyBX/
        +8C6oJAfcF1QvdIAOAi+F84DlgOXA6uBo9DPrt5Y4DmgF/gRsD4o5He5Lqre6Ul8CHwvnAOcBvjApcBZ
        6IChayPAA0B3dDwcFOL9uq5a0gB4GS7276BxvGkh0itYA1wEnAw0ua4tJcaBp4DbgB4gnKxUijffssJ1
        XbGjAXCYuryNDRZzNBIGq4DzgZOAVte1Jcwo0ujXAwVgI/BMUMjrVvCHQQNgBkVhcARwDvB6JBROR1Yg
        6kzDQ1MBdgIPAxuAO4DfGMNz3eu00c8UDYBZcsmqTTQYOx+5NTgPeZx4dvT3LBoIe6sg8/I3Ixtwhsh7
        Hh43sKu7kE/kjjyuaQDUSJcXNlhoR24PliJhcBYSCIuBuaTn92GRWXk7gCeA3yGN/kHgKWMo6VW+NtJy
        wtWdNatDjKUNafxLgE7gDOAU4HhkXUI70EJ8f08WmYwzhOysuxV4DOnW9yFX++22wkjPLXqFdyGuJ1Yi
        XeqFVORJwgIkGI5DwuH46Dgu+ucLgfnII8gm5HbCxe+yjIzI7wF2Iffs/cAzSGPfAmwDnga2W+xQA2as
        u5B39RGrvWgAxIS/eqPBmmbkVmEeEgIdyHhCbtqxAAmH+dH3NiMh0QTMARqRwKgeIPff1WMSef31eHSM
        ITPrdkXHENLQB6KjGB07gd3GMIw1492FZdqFjwENgITxV26CjG0AMkhjbwQaDWTsVOM30w6Qrnr1qIZA
        Ofo6iWXSGMq2YirBLctc/4hKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoplQb/HzKe
        u8St1JTeAAAAAElFTkSuQmCC
</value>
  </data>
</root>